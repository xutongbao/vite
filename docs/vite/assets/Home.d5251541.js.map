{"version":3,"file":"Home.d5251541.js","sources":["../../../src/views/light/index/home/SidebarItem.vue","../../../src/views/light/index/home/Sidebar.vue","../../../src/views/light/index/home/CategoryItem.vue","../../../src/views/light/index/home/Category.vue","../../../src/views/light/index/home/useListScroll.js","../../../src/components/light/Dialog.vue","../../../src/views/light/index/home/List.vue","../../../src/views/light/index/home/useAddBook.js","../../../src/views/light/index/home/Home.vue"],"sourcesContent":["<template>\r\n  <div\r\n    :class=\"`m-sidebar-item ${currentId === sidebarItem.id ? 'active' : ''}`\"\r\n    @click=\"handleNav(sidebarItem.id)\"\r\n  >\r\n    {{ sidebarItem.title }}\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, defineProps } from \"vue\"\r\nimport { useStore } from \"vuex\"\r\n\r\nconst props = defineProps({\r\n  sidebarItem: {\r\n    type: Object,\r\n  },\r\n})\r\n\r\nconst store = useStore()\r\nconst currentId = computed(() => store.state.light.currentId)\r\n\r\nconst handleNav = (id) => {\r\n  let el = document.getElementById(id)\r\n  el.scrollIntoView({ block: \"start\", behavior: \"smooth\" })\r\n  store.commit({ type: \"setLightState\", key: \"currentId\", value: id })\r\n  store.commit({ type: \"setLightState\", key: \"isRealScroll\", value: false })\r\n}\r\n</script>\r\n\r\n<style></style>\r\n","<template>\r\n  <div class=\"m-sidebar\">\r\n    <SidebarItem\r\n      v-for=\"sidebarItem in list\"\r\n      :key=\"sidebarItem.id\"\r\n      :sidebarItem=\"sidebarItem\"\r\n    >\r\n    </SidebarItem>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useStore } from \"vuex\"\r\nimport { computed } from \"vue\"\r\nimport SidebarItem from \"./SidebarItem.vue\"\r\n\r\nconst store = useStore()\r\nconst list = computed(() => store.state.light.list)\r\n</script>\r\n\r\n<style></style>\r\n","<template>\r\n  <div class=\"m-category-item\">\r\n    <el-image\r\n      :alt=\"book.title\"\r\n      :src=\"book.avatar\"\r\n      lazy\r\n      class=\"m-category-item-img\"\r\n      @click=\"handleImageClick(book.id)\"\r\n    >\r\n      <template #placeholder>\r\n        <div class=\"m-category-item-img-loading\"></div>\r\n      </template>\r\n    </el-image>\r\n    <div class=\"m-category-item-info\">\r\n      <div>{{ book.title }}</div>\r\n      <Stars :number=\"book.stars\" />\r\n      <div class=\"m-book-price\">￥{{ book.price }}</div>\r\n      <button @click=\"handleShowDialog\">添加</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps } from \"vue\"\r\nimport Stars from \"@/components/light/Stars.vue\"\r\nimport { useStore } from \"vuex\"\r\nimport { useRouter } from \"vue-router\"\r\n\r\nconst props = defineProps({\r\n  book: {\r\n    type: Object,\r\n  },\r\n})\r\n\r\nconst store = useStore()\r\nconst router = useRouter()\r\n\r\nconst handleShowDialog = () => {\r\n  store.commit({\r\n    type: \"setLightState\",\r\n    key: \"isListDialogVisible\",\r\n    value: true,\r\n  })\r\n  const book = props.book\r\n  book.count = 1\r\n  store.commit({ type: \"setLightState\", key: \"addBook\", value: book })\r\n}\r\n\r\nconst handleImageClick = (id) => {\r\n  router.push(`/light/detail/${id}`)\r\n}\r\n</script>\r\n\r\n<style></style>\r\n","<template>\r\n  <div :id=\"category.id\" class=\"js-category\">\r\n    <div class=\"m-category-title\">\r\n      {{ category.title }}\r\n    </div>\r\n    <CategoryItem\r\n      v-for=\"book in category.list\"\r\n      :key=\"book.id\"\r\n      :book=\"book\"\r\n    ></CategoryItem>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, defineProps, defineEmit } from \"vue\"\r\nimport CategoryItem from \"./CategoryItem.vue\"\r\n\r\nconst props = defineProps({\r\n  category: {\r\n    type: Object,\r\n  },\r\n})\r\n\r\nconst emit = defineEmit([\"onTopArr\"])\r\n\r\nonMounted(() => {\r\n  const topArr = [...document.getElementsByClassName(\"js-category\")].map(\r\n    (item) => item.offsetTop\r\n  )\r\n  topArr.push(Infinity)\r\n  emit(\"onTopArr\", topArr)\r\n})\r\n</script>\r\n\r\n<style></style>\r\n","import { useStore } from \"vuex\"\r\n\r\nlet topArr = []\r\nlet timer\r\nexport default () => {\r\n  const store = useStore()\r\n\r\n  const handleScroll = (e) => {\r\n    if (store.state.light.isRealScroll) {\r\n      let { scrollTop } = e.target\r\n      scrollTop += topArr[0]\r\n      const index = topArr.findIndex(\r\n        (top, index, arr) => top <= scrollTop && scrollTop < arr[index + 1]\r\n      )\r\n      if (index !== store.state.light.currentId) {\r\n        store.commit({ type: \"setLightState\", key: \"currentId\", value: index })\r\n      }\r\n    } else {\r\n      clearTimeout(timer)\r\n      timer = setTimeout(() => {\r\n        store.commit({ type: 'setLightState', key: 'isRealScroll', value: true })\r\n      }, 300)\r\n    }\r\n  }\r\n\r\n  const handleTopArr = (arr) => {\r\n    topArr = arr\r\n  }\r\n\r\n  return {\r\n    handleScroll,\r\n    handleTopArr\r\n  }\r\n}","<template>\r\n  <div :class=\"[`m-mask ${visible ? 'active' : ''}`]\">\r\n    <div class=\"m-dialog\">\r\n      <div class=\"m-dialog-header\">\r\n        <span class=\"m-dialog-header-title\">{{ title }}</span>\r\n        <span class=\"m-dialog-header-close\" @click=\"handleClose\">X</span>\r\n      </div>\r\n      <div class=\"m-dialog-content\">\r\n        <slot name=\"content\"></slot>\r\n      </div>\r\n      <div class=\"m-dialog-footer\">\r\n        <button class=\"m-btn\" @click=\"handleClose\">取消</button>\r\n        <button class=\"m-btn\" @click=\"handleOk\">确定</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, defineEmit } from \"vue\"\r\n\r\nconst props = defineProps({\r\n  visible: {\r\n    type: Boolean,\r\n  },\r\n  title: {\r\n    type: String,\r\n  },\r\n})\r\n\r\nconst emit = defineEmit([\"onClose\", \"onOk\"])\r\n\r\nconst handleClose = () => {\r\n  emit(\"onClose\")\r\n}\r\n\r\nconst handleOk = () => {\r\n  emit(\"onOk\")\r\n}\r\n</script>\r\n\r\n<style></style>\r\n","<template>\r\n  <div class=\"m-list\" @scroll=\"handleScroll\">\r\n    <Category\r\n      v-for=\"category in list\"\r\n      :key=\"category.id\"\r\n      :category=\"category\"\r\n      @onTopArr=\"handleTopArr\"\r\n    ></Category>\r\n    <Teleport to=\"body\">\r\n      <Dialog\r\n        :visible=\"isListDialogVisible\"\r\n        title=\"添加\"\r\n        @onClose=\"handleClose\"\r\n        @onOk=\"handleOk\"\r\n      >\r\n        <template #content>\r\n          <div class=\"m-add-wrap\">\r\n            <div class=\"m-add\">\r\n              <button class=\"m-btn\" @click=\"handleSubCount\">-</button>\r\n              <input\r\n                type=\"text\"\r\n                class=\"m-add-input\"\r\n                :value=\"addBook.count\"\r\n                @input=\"handleInputCount\"\r\n              />\r\n              <button class=\"m-btn\" @click=\"handleAddCount\">+</button>\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </Dialog>\r\n    </Teleport>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from \"vue\"\r\nimport { useStore } from \"vuex\"\r\nimport Category from \"./Category.vue\"\r\nimport useListScroll from \"./useListScroll\"\r\nimport useAddBook from \"./useAddBook\"\r\nimport Dialog from \"@/components/light/Dialog.vue\"\r\n\r\nconst store = useStore()\r\nconst list = computed(() => store.state.light.list)\r\nconst currentId = computed(() => store.state.light.currentId)\r\nconst addBook = computed(() => store.state.light.addBook)\r\nconst isListDialogVisible = computed(\r\n  () => store.state.light.isListDialogVisible\r\n)\r\nconst { handleScroll, handleTopArr } = useListScroll()\r\nconst {\r\n  handleClose,\r\n  handleOk,\r\n  handleAddCount,\r\n  handleSubCount,\r\n  handleInputCount,\r\n} = useAddBook()\r\n</script>\r\n\r\n<style></style>\r\n","import { useStore } from \"vuex\"\r\n\r\nexport default () => {\r\n  const store = useStore()\r\n\r\n  const handleClose = () => {\r\n    store.commit({\r\n      type: \"setLightState\",\r\n      key: \"isListDialogVisible\",\r\n      value: false,\r\n    })\r\n  }\r\n\r\n  const handleOk = async () => {\r\n    const addBook = store.state.light.addBook\r\n    if (addBook.count !== '') {\r\n      store.dispatch({ type: 'addMyBooks' , book: addBook }).then(() => {\r\n        handleClose()\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleAddCount = () => {\r\n    const addBook = store.state.light.addBook\r\n    addBook.count++\r\n    store.commit({ type: \"setLightState\", key: \"addBook\", value: addBook })\r\n  }\r\n\r\n  const handleSubCount = () => {\r\n    const addBook = store.state.light.addBook\r\n    if (addBook.count > 1) {\r\n      addBook.count--\r\n      store.commit({ type: \"setLightState\", key: \"addBook\", value: addBook })\r\n    }\r\n  }\r\n\r\n  const handleInputCount = (e) => {\r\n    const addBook = store.state.light.addBook\r\n    addBook.count = e.target.value.replace(/[^\\d]/g, \"\")\r\n    if (addBook.count !== '') {\r\n      addBook.count = parseInt(addBook.count)\r\n    }\r\n    store.commit({\r\n      type: \"setLightState\",\r\n      key: \"addBook\",\r\n      value: { ...addBook },\r\n    })\r\n  }\r\n\r\n  return {\r\n    handleClose,\r\n    handleOk,\r\n    handleAddCount,\r\n    handleSubCount,\r\n    handleInputCount,\r\n  }\r\n}\r\n","<template>\r\n  <div class=\"m-main m-home\">\r\n    <Sidebar></Sidebar>\r\n    <List></List>    \r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport Sidebar from \"./Sidebar.vue\"\r\nimport List from \"./List.vue\"\r\nimport { onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nconst store = useStore()\r\n\r\nonMounted(() => {\r\n  store.dispatch({ type: 'getLightList' })\r\n})\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"names":["store","useStore","currentId","computed","state","light","id","document","getElementById","scrollIntoView","block","behavior","commit","type","key","value","list","router","useRouter","handleShowDialog","book","props","count","push","topArr2","getElementsByClassName","map","item","offsetTop","Infinity","timer","topArr","handleClose","handleOk","addBook","isListDialogVisible","handleScroll","handleTopArr","e","isRealScroll","scrollTop","target","index","findIndex","top","index2","arr","setTimeout","useListScroll","handleAddCount","handleSubCount","handleInputCount","async","dispatch","then","replace","parseInt","__assign","useAddBook"],"mappings":"omBAmBMA,EAAQC,IACRC,EAAYC,GAAS,IAAMH,EAAMI,MAAMC,MAAMH,oIAEhCI,mBACRC,SAASC,eAAeF,GAC9BG,eAAe,CAAEC,MAAO,QAASC,SAAU,aACxCC,OAAO,CAAEC,KAAM,gBAAiBC,IAAK,YAAaC,MAAOT,WACzDM,OAAO,CAAEC,KAAM,gBAAiBC,IAAK,eAAgBC,OAAO,IAJlD,IAACT,oFCNbN,EAAQC,IACRe,EAAOb,GAAS,IAAMH,EAAMI,MAAMC,MAAMW,qiBCiBxChB,EAAQC,IACRgB,EAASC,IAETC,EAAmB,OACjBP,OAAO,CACXC,KAAM,gBACNC,IAAK,sBACLC,OAAO,UAEHK,EAAOC,EAAMD,OACdE,MAAQ,IACPV,OAAO,CAAEC,KAAM,gBAAiBC,IAAK,UAAWC,MAAOK,0KAGrCd,mBACjBiB,KAAK,iBAAiBjB,KADN,IAACA,sUCvBhB,WACFkB,EAAS,IAAIjB,SAASkB,uBAAuB,gBAAgBC,KAChEC,GAASA,EAAKC,cAEVL,KAAKM,EAAAA,KACP,WAAYL,4MC5BnB,IACIM,EADAC,EAAS,0OC8BPC,EAAc,OACb,YAGDC,EAAW,OACV,qaCKDjC,EAAQC,IACRe,EAAOb,GAAS,IAAMH,EAAMI,MAAMC,MAAMW,UACnB,IAAMhB,EAAMI,MAAMC,MAAMH,kBAC7CgC,EAAU/B,GAAS,IAAMH,EAAMI,MAAMC,MAAM6B,UAC3CC,EAAsBhC,GAC1B,IAAMH,EAAMI,MAAMC,MAAM8B,uBAEpBC,aAAEA,eAAcC,GF7CP,YACPrC,EAAQC,UAwBP,CACLmC,aAvBoBE,OAChBtC,EAAMI,MAAMC,MAAMkC,aAAc,KAC9BC,UAAEA,GAAcF,EAAEG,UACTV,EAAO,SACdW,EAAQX,EAAOY,WACnB,CAACC,EAAKC,EAAOC,IAAQF,GAAOJ,GAAaA,EAAYM,EAAID,EAAQ,KAE/DH,IAAU1C,EAAMI,MAAMC,MAAMH,aACxBU,OAAO,CAAEC,KAAM,gBAAiBC,IAAK,YAAaC,MAAO2B,sBAGpDZ,KACLiB,YAAW,OACXnC,OAAO,CAAEC,KAAM,gBAAiBC,IAAK,eAAgBC,OAAO,MACjE,MAULsB,aANoBS,MACXA,KEuB0BE,IACjChB,YACJA,WACAC,iBACAgB,iBACAC,mBACAC,GCrDa,YACPnD,EAAQC,IAER+B,EAAc,OACZpB,OAAO,CACXC,KAAM,gBACNC,IAAK,sBACLC,OAAO,WAwCJ,CACLiB,YAAAA,EACAC,SAtCemB,gBACTlB,EAAUlC,EAAMI,MAAMC,MAAM6B,QACZ,KAAlBA,EAAQZ,SACJ+B,SAAS,CAAExC,KAAM,aAAeO,KAAMc,IAAWoB,MAAK,aAoC9DL,eA9BqB,WACff,EAAUlC,EAAMI,MAAMC,MAAM6B,UAC1BZ,UACFV,OAAO,CAAEC,KAAM,gBAAiBC,IAAK,UAAWC,MAAOmB,KA4B7DgB,eAzBqB,WACfhB,EAAUlC,EAAMI,MAAMC,MAAM6B,QAC9BA,EAAQZ,MAAQ,MACVA,UACFV,OAAO,CAAEC,KAAM,gBAAiBC,IAAK,UAAWC,MAAOmB,MAsB/DiB,iBAlBwBb,UAClBJ,EAAUlC,EAAMI,MAAMC,MAAM6B,UAC1BZ,MAAQgB,EAAEG,OAAO1B,MAAMwC,QAAQ,SAAU,IAC3B,KAAlBrB,EAAQZ,UACFA,MAAQkC,SAAStB,EAAQZ,UAE7BV,OAAO,CACXC,KAAM,gBACNC,IAAK,UACLC,MAAO0C,KAAKvB,QDWdwB,0tBE5CE1D,EAAQC,cAEJ,OACFoD,SAAS,CAAExC,KAAM"}